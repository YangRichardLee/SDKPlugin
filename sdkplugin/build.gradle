apply plugin: 'com.android.application'

android {

    compileSdkVersion 28
    buildToolsVersion "28.0.0"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    signingConfigs {
        release {
            storeFile file("lionkeystore")
            storePassword "123456"
            keyAlias "lion"
            keyPassword "123456"
            v2SigningEnabled false
        }
    }
    buildTypes {
        buildTypes {
            release {
                //设置使用签名配置
                signingConfig signingConfigs.release
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

project.tasks.whenTaskAdded { Task theTask ->
    if (theTask.name == 'assembleRelease') {
        theTask.dependsOn(diyTask)            // 编译完apk之后再执行自定义task
    }
}

Task diyTask = project.task('diyTask') {
    doLast {
        def fileName = "sdkplugin-release.apk"
        def fromFile = "./build/outputs/apk/" + fileName
        def intoFile = "../app/src/main/assets/"
        def file = new File(intoFile + "/" + fileName)
        if (file.exists()){
            def var = delete(intoFile + "/" + fileName)
            println("clear before create $var -----------------")
        }

        //copy过去后还是老的文件。先停用
//        copy {
//            from fromFile
//            into intoFile
//        }
        println("=====================build.doLast success.=========================")
    }
}

dependencies {
    compile fileTree(dir: "libs", include: ["*.jar"])
//    compile 'com.android.support:appcompat-v7:28.0.0'
    compile project(path: ':pluginlibs')
    compile files('libs/gmthirdutil.jar')
}

